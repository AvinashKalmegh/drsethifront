import React, { useContext, useEffect, useState } from "react";

import { useNavigate, useParams } from "react-router-dom";
import MyContext from "../ContextApi/MyContext";
import Loader from "./Loader/Loader";
import axios from "axios";
import { fetchRecentBlogs, getBlogById } from "./Admin/Blog/blogApis";
import { toast } from "react-toastify";

const BlogDetail = () => {
  const { blogId } = useParams();

  const [loading, setLoading] = useState(true);
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [image, setImage] = useState("");
  const [date, setDate] = useState("");
  const { api, imgapi, preview } = useContext(MyContext);
  const [recentBlogs, setRecentBlogs] = useState([]);

  const navigate = useNavigate();

  const handleRecentBlogClick = (id) => {
    setLoading(true); // ✅ Show loader
    navigate(`/blogs/${id}`); // ✅ Triggers route change
  };

  useEffect(() => {
    const fetchBlogData = async () => {
      setLoading(true);
      try {
        const [blogData, recent] = await Promise.all([
          getBlogById(api, blogId),
          fetchRecentBlogs(api),
        ]);

        setTitle(blogData.title || "");
        setDescription(blogData.description || "");
        setImage(blogData.image || null);

        const formattedDate = new Date(blogData.created_at).toLocaleDateString(
          "en-US",
          { year: "numeric", month: "short", day: "2-digit" }
        );
        setDate(formattedDate);

        // ✅ Filter out the current blog from recent list
        setRecentBlogs(
          recent.filter(
            (item) => String(item.id) !== String(blogId) && item.status === true
          )
        );
      } catch (error) {
        toast.error("Failed to load blog data.");
      } finally {
        setLoading(false);
      }
    };

    fetchBlogData();
  }, [api, blogId]);

  if (loading) return <Loader />;
  return (
    <div className="text-sm mt-20">
      <div
        className="relative w-full h-[200px] bg-cover bg-center"
        style={{
          backgroundImage: `url(${preview})`,
        }}
      >
        <div
          className="absolute inset-0 z-10"
          style={{ backgroundColor: "rgba(73, 71, 71, 0.6)" }}
        />
        <div className="absolute inset-0 z-20 flex items-center justify-center md:justify-start md:px-40">
          <p className="text-2xl md:text-4xl font-semibold text-white">Blog</p>
        </div>
      </div>
      {/* <p className=" px-35 mt-5">
        <span>Blog</span> <span>{title}</span>
      </p> */}
      <div className="max-w-7xl mx-auto flex flex-col lg:flex-row gap-10 px-4 py-10">
        {/* Blog Detail */}

        <div className="lg:w-2/3 w-full  px-1 md:px-0">
          <img
            src={`${imgapi}${image}`}
            alt={title}
            className="w-full h-auto rounded-md mb-2"
          />
          <p className="text-xs italic text-gray-500 mb-4">
            Image generated by AI.
          </p>
          <p className="text-gray-700 font-medium text-sm mb-2">
            Posted On: {date}
          </p>
          <h1 className="font-bold text-red-600 mb-4">{title}</h1>
          <div
            className="blog-description prose prose-sm md:prose-base  px-1 md:px-0"
            dangerouslySetInnerHTML={{ __html: description }}
          />
        </div>

        {/* Sidebar */}
        <div className="lg:w-1/3 w-full">
          {/* <h3 className="text-lg font-semibold mb-2">SEARCH BLOG</h3>
          <input
            type="text"
            placeholder="Search Keywords"
            className="w-full px-4 py-2 border border-gray-300 rounded-md mb-6"
          /> */}

          <h3 className="text-lg font-semibold mb-2">Recent Blogs</h3>
          <div className="space-y-4">
            {recentBlogs.map((item, index) => (
              <div
                key={index}
                className="flex gap-3 cursor-pointer"
                onClick={() => handleRecentBlogClick(item.id)}
              >
                {" "}
                <img
                  src={`${imgapi}${item.image}`}
                  alt="Recent Blog"
                  className="w-14 h-14 rounded-md object-cover"
                />
                <div>
                  <p className="text-xs text-red-600 font-medium">
                    {item.date}
                  </p>
                  <p className="text-sm font-medium text-gray-800 line-clamp-2">
                    {item.title}
                  </p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default BlogDetail;
